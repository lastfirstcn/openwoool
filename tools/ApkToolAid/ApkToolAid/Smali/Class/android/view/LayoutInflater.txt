Instantiates a layout XML file into its corresponding View objects. It is never used directly. Instead, use Activity.getLayoutInflater() or Context#getSystemService to retrieve a standard LayoutInflater instance that is already hooked up to the current context and correctly configured for the device you are running on.
class android.view.LayoutInflater
.class Landroid/view/LayoutInflater;

继承
inherit java.lang.Object
.super Ljava/lang/Object;

构造方法：Create a new LayoutInflater instance associated with a particular Context.
protected constructor LayoutInflater(Context context)
invoke-direct {v0, v1}, Landroid/view/LayoutInflater;-><init>(Landroid/content/Context;)V

构造方法：Create a new LayoutInflater instance that is a copy of an existing LayoutInflater, optionally with its Context changed.
protected constructor LayoutInflater(LayoutInflater original, Context newContext)
invoke-direct {v0, v1, v2}, Landroid/view/LayoutInflater;-><init>(Landroid/view/LayoutInflater;Landroid/content/Context;)V

Create a copy of the existing LayoutInflater object, with the copy pointing to a different Context than the original.
abstract LayoutInflater cloneInContext(Context newContext)
invoke-virtual {v0, v1}, Landroid/view/LayoutInflater;->cloneInContext(Landroid/content/Context;)Landroid/view/LayoutInflater;

Low-level function for instantiating a view by name.
final View createView(String name, String prefix, AttributeSet attrs)
invoke-virtual {v0, v1, v2, v3}, Landroid/view/LayoutInflater;->createView(Ljava/lang/String;Ljava/lang/String;Landroid/util/AttributeSet;)Landroid/view/View;

Obtains the LayoutInflater from the given context.
LayoutInflater from(Context context)
invoke-static {v0}, Landroid/view/LayoutInflater;->from(Landroid/content/Context;)Landroid/view/LayoutInflater;

Return the context we are running in, for access to resources, class loader, etc.
Context getContext()
invoke-virtual {v0}, Landroid/view/LayoutInflater;->getContext()Landroid/content/Context;

Return the current Factory (or null).
final LayoutInflater.Factory getFactory()
invoke-virtual {v0}, Landroid/view/LayoutInflater;->getFactory()Landroid/view/LayoutInflater$Factory;

Return the current Factory2.
final LayoutInflater.Factory2 getFactory2()
invoke-virtual {v0}, Landroid/view/LayoutInflater;->getFactory2()Landroid/view/LayoutInflater$Factory2;

没有帮助内容
LayoutInflater.Filter getFilter()
invoke-virtual {v0}, Landroid/view/LayoutInflater;->getFilter()Landroid/view/LayoutInflater$Filter;

Inflate a new view hierarchy from the specified xml resource.
View inflate(int resource, ViewGroup root)
invoke-virtual {v0, v1, v2}, Landroid/view/LayoutInflater;->inflate(ILandroid/view/ViewGroup;)Landroid/view/View;

Inflate a new view hierarchy from the specified xml node.
View inflate(XmlPullParser parser, ViewGroup root)
invoke-virtual {v0, v1, v2}, Landroid/view/LayoutInflater;->inflate(Lorg/xmlpull/v1/XmlPullParser;Landroid/view/ViewGroup;)Landroid/view/View;

Inflate a new view hierarchy from the specified XML node.
View inflate(XmlPullParser parser, ViewGroup root, boolean attachToRoot)
invoke-virtual {v0, v1, v2, v3}, Landroid/view/LayoutInflater;->inflate(Lorg/xmlpull/v1/XmlPullParser;Landroid/view/ViewGroup;Z)Landroid/view/View;

Inflate a new view hierarchy from the specified xml resource.
View inflate(int resource, ViewGroup root, boolean attachToRoot)
invoke-virtual {v0, v1, v2, v3}, Landroid/view/LayoutInflater;->inflate(ILandroid/view/ViewGroup;Z)Landroid/view/View;

Attach a custom Factory interface for creating views while using this LayoutInflater.
void setFactory(LayoutInflater.Factory factory)
invoke-virtual {v0, v1}, Landroid/view/LayoutInflater;->setFactory(Landroid/view/LayoutInflater$Factory;)V

Like setFactory(LayoutInflater.Factory), but allows you to set a Factory2 interface.
void setFactory2(LayoutInflater.Factory2 factory)
invoke-virtual {v0, v1}, Landroid/view/LayoutInflater;->setFactory2(Landroid/view/LayoutInflater$Factory2;)V

Sets the Filter to by this LayoutInflater.
void setFilter(LayoutInflater.Filter filter)
invoke-virtual {v0, v1}, Landroid/view/LayoutInflater;->setFilter(Landroid/view/LayoutInflater$Filter;)V

Version of onCreateView(java.lang.String, android.util.AttributeSet) that also takes the future parent of the view being constructed.
protected View onCreateView(View parent, String name, AttributeSet attrs)
invoke-virtual {v0, v1, v2, v3}, Landroid/view/LayoutInflater;->onCreateView(Landroid/view/View;Ljava/lang/String;Landroid/util/AttributeSet;)Landroid/view/View;

This routine is responsible for creating the correct subclass of View given the xml element name.
protected View onCreateView(String name, AttributeSet attrs)
invoke-virtual {v0, v1, v2}, Landroid/view/LayoutInflater;->onCreateView(Ljava/lang/String;Landroid/util/AttributeSet;)Landroid/view/View;
