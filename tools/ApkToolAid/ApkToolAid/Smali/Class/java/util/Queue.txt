在处理元素前用于保存元素的 collection。除了基本的 Collection 操作外，队列还提供其他的插入、提取和检查操作。每个方法都存在两种形式：一种抛出异常（操作失败时），另一种返回一个特殊值（null 或 false，具体取决于操作）。插入操作的后一种形式是用于专门为有容量限制的 Queue 实现设计的；在大多数实现中，插入操作不会失败。
interface java.util.Queue
.class interface Ljava/util/Queue;

继承
inherit java.util.Collection
.super Ljava/util/Collection;

将指定的元素插入此队列（如果立即可行且不会违反容量限制），在成功时返回 true，如果当前没有可用的空间，则抛出 IllegalStateException。
boolean add(E e)
invoke-interface {v0, v1}, Ljava/util/Queue;->add(Ljava/lang/Object;)Z

获取，但是不移除此队列的头。
E element()
invoke-interface {v0}, Ljava/util/Queue;->element()Ljava/lang/Object;

将指定的元素插入此队列（如果立即可行且不会违反容量限制），当使用有容量限制的队列时，此方法通常要优于 add(E)，后者可能无法插入元素，而只是抛出一个异常。
boolean offer(E e)
invoke-interface {v0, v1}, Ljava/util/Queue;->offer(Ljava/lang/Object;)Z

获取但不移除此队列的头；如果此队列为空，则返回 null。
E peek()
invoke-interface {v0}, Ljava/util/Queue;->peek()Ljava/lang/Object;

获取并移除此队列的头，如果此队列为空，则返回 null。
E poll()
invoke-interface {v0}, Ljava/util/Queue;->poll()Ljava/lang/Object;

获取并移除此队列的头。
E remove()
invoke-interface {v0}, Ljava/util/Queue;->remove()Ljava/lang/Object;
