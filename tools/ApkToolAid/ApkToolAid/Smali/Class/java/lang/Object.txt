类 Object 是类层次结构的根类。每个类都使用 Object 作为超类。所有对象（包括数组）都实现这个类的方法。
class java.lang.Object
.class Ljava/lang/Object;

构造方法：no help
constructor Object()
invoke-direct {v0}, Ljava/lang/Object;-><init>()V

创建并返回此对象的一个副本。
protected Object clone()
invoke-virtual {v0}, Ljava/lang/Object;->clone()Ljava/lang/Object;

指示其他某个对象是否与此对象“相等”。
boolean equals(Object obj)
invoke-virtual {v0, v1}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

当垃圾回收器确定不存在对该对象的更多引用时，由对象的垃圾回收器调用此方法。
protected void finalize()
invoke-virtual {v0}, Ljava/lang/Object;->finalize()V

返回此 Object 的运行时类。
Class<?> getClass()
invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

返回该对象的哈希码值。
int hashCode()
invoke-virtual {v0}, Ljava/lang/Object;->hashCode()I

唤醒在此对象监视器上等待的单个线程。
void notify()
invoke-virtual {v0}, Ljava/lang/Object;->notify()V

唤醒在此对象监视器上等待的所有线程。
void notifyAll()
invoke-virtual {v0}, Ljava/lang/Object;->notifyAll()V

返回该对象的字符串表示。
String toString()
invoke-virtual {v0}, Ljava/lang/Object;->toString()Ljava/lang/String;

在其他线程调用此对象的 notify() 方法或 notifyAll() 方法前，导致当前线程等待。
void wait()
invoke-virtual {v0}, Ljava/lang/Object;->wait()V

在其他线程调用此对象的 notify() 方法或 notifyAll() 方法，或者超过指定的时间量前，导致当前线程等待。
void wait(long timeout)
invoke-virtual {v0, v1, v2}, Ljava/lang/Object;->wait(J)V

在其他线程调用此对象的 notify() 方法或 notifyAll() 方法，或者其他某个线程中断当前线程，或者已超过某个实际时间量前，导致当前线程等待。
void wait(long timeout, int nanos)
invoke-virtual {v0, v1, v2, v3}, Ljava/lang/Object;->wait(JI)V
